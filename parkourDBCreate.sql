-- Summary of changes from ERD:
-- Had to change User to Users due to User being a keyword
-- For the sake of proper syntax, words are separated by a _ rather than using camel back due to SQL not caring about capitilization
-- In PlayerInfo Table, changed the word precice to precise (Spell Check)
-- Assumption: User and PlayerInfo relationship one to one and only one, Cardinality not defined of User Table and was assumed to be one
-- Created a relationship table to make the many to many relationship between Users and TTN
-- Created Foreign Keys in Users to faciliate relationship between users and GLB and Settings

-- drop tables
DROP TABLE IF EXISTS users_inf;
DROP TABLE IF EXISTS global_leader_board;
DROP TABLE IF EXISTS player_info;
DROP TABLE IF EXISTS time_trial_name;
DROP TABLE IF EXISTS settings;

-- create tables

CREATE TABLE global_leaderboard
(
    USER_ID INT NOT NULL,
    TIME_TRIALS VARCHAR(32),
    LEVELS VARCHAR(32),
    COMBO_SCORE VARCHAR(32),
    WALLBOOST_SPEED VARCHAR(32),
    DEATH_RATIO VARCHAR(32),
    PLAYTIME VARCHAR(32),
    CONSTRAINT GLB_ID_PK PRIMARY KEY (USER_ID)
);

CREATE TABLE settings
(
    USER_ID INT NOT NULL,
    DOT_CURSOR BOOLEAN,
    CAMERA_TILT BOOLEAN,
    FULL_TILT BOOLEAN,
    CAMERA_MOVEMENT BOOLEAN,
    CAMERA_TILT_ON_FALL BOOLEAN,
    ALLOW_SPEC BOOLEAN,
    HEAD_TILT BOOLEAN,
    VIGNETTE BOOLEAN,
    PLAYER_INVITES BOOLEAN,
    SKY_BEAMS BOOLEAN,
    HQ_ENV BOOLEAN,
    FANCY_POINTS BOOLEAN,
    KEYBINDS VARCHAR(64),
    CONSTRAINT SETTINGS_ID_PK PRIMARY KEY (USER_ID)
);


/*
Time Trial template - cant support anything non-alphanumeric
CREATE TABLE time_trial_name
    (
        USER_ID INT NOT NULL,
        TIME VARCHAR(32),
        REPLAY VARCHAR(64),
        CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

    );
*/

CREATE TABLE Peak_To_Peak
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Communication_Issues
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Trespassing
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Crest_Tower
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Farside
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Elevation_Difference
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Plaza
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Architectural_Staircase
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Techs_Bequest
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Endrunner
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Wayside
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Around_The_Wrld
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Tightrope_Gambler
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Dont_Look_Down
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Downtown_Dash
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Cross_Town
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Vertical_Harmony
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Uptown
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Descension
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Around_and_Up
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Base_Jump
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Just_Visiting
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Vertigo
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Going_Down
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Rooftop_Dash
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Small_Town_Advancement
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Wallbooster_Pro
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Office_Dash
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE BLine
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE SPACE_DASH
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Vertex_Tower
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Vertex_Voyage
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Bleach
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Pipe_Dreams
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Art_of_Electronic
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE On_The_Ropes
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE WCR
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Wallrun_Warrior
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Boosters_Heaven
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Filmstar
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Bulwark
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Herbal_Run
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Hyperlight
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Sideliner
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Under_Construction
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Straightforward
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Craneius
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Building_Hopper
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE The_Drop
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Townside_Run
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE The_Climb
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE The_Spire
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Being_Gazed_Upon
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Flight_Test
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Twin_Peaks
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE skaeP_niwT
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Anime_Excursion

(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Window_Washers_Dream
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Boardwalk
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Mag_Abuse
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);
CREATE TABLE Flight_o_Stairs
(
    USER_ID INT NOT NULL,
    TIME VARCHAR(32),
    REPLAY VARCHAR(64),
    CONSTRAINT TTN_ID_PK PRIMARY KEY (USER_ID)

);

CREATE TABLE users_inf
(
    USER_ID INT PRIMARY KEY NOT NULL,
    USER_NAME VARCHAR(32) NOT NULL,
    DUNCED BOOLEAN,
    BANNED BOOLEAN,
    WARNINGS VARCHAR(4),
    INVENTORY VARCHAR(64),
    fk_GLB_ID INT NOT NULL,
    fk_Settings_ID INT NOT NULL,
    FOREIGN KEY (fk_GLB_ID) REFERENCES GLOBAL_LEADERBOARD (USER_ID), -- Foreign Key to GLB
    FOREIGN KEY (fk_Settings_ID) REFERENCES Settings (User_ID) -- Foreign Key to Settings
);

-- Establishes a many to many relationship between users and ttn tables
CREATE TABLE user_to_ttn
(
    User_ID INT NOT NULL,
    TTN_ID INT NOT NULL,
    FOREIGN KEY (User_ID) REFERENCES users_inf (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Peak_To_Peak (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Communication_Issues (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Trespassing (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Crest_Tower (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Farside (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Elevation_Difference (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Plaza (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Architectural_Staircase (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Techs_Bequest (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Endrunner (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Wayside (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Around_The_Wrld (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Tightrope_Gambler (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Dont_Look_Down (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Downtown_Dash (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Cross_Town (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Vertical_Harmony (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Uptown (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Descension (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Around_and_Up (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Base_Jump (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Just_Visiting (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Vertigo (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Going_Down (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Rooftop_Dash (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Small_Town_Advancement (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Wallbooster_Pro (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Office_Dash (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES BLine (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES SPACE_DASH (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Vertex_Tower (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Vertex_Voyage (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Bleach (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Pipe_Dreams (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Art_of_Electronic (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES On_The_Ropes (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES WCR (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Wallrun_Warrior (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Boosters_Heaven (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Filmstar (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Bulwark (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Herbal_Run (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Hyperlight (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Sideliner (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Under_Construction (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Straightforward (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Craneius (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Building_Hopper (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES The_Drop (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Townside_Run (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES The_Climb (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES The_Spire (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Being_Gazed_Upon (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Flight_Test (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Twin_Peaks (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES skaeP_niwT (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Anime_Excursion (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Window_Washers_Dream (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Boardwalk (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Mag_Abuse (USER_ID),
    FOREIGN KEY (TTN_ID) REFERENCES Flight_o_Stairs (USER_ID),

    UNIQUE (User_ID, TTN_ID)
);

CREATE TABLE player_info
(
    User_ID INT PRIMARY KEY NOT NULL,
    POINTS VARCHAR(32),
    EXPERIENCE VARCHAR(32),
    LEVEL VARCHAR(8),
    LANDINGS VARCHAR(32),
    PRECISE_LANDINGS VARCHAR(32),
    WALLCLIMB_BOOSTS VARCHAR(32),
    WALLCLIMB_BOOSTS_RATIO VARCHAR(32),
    MAX_COMBO VARCHAR(32),
    LONGEST_COMBO VARCHAR(32),
    AVERAGE_COMBO VARCHAR(32),
    DEATHS VARCHAR(32),
    IS_ONLINE BOOLEAN,
    LAST_SEEN DATETIME,
    ADV_TUTORIAL BOOLEAN,
    SCALED_VERTEX BOOLEAN,
    SCALED_VERTIGO BOOLEAN,
    FOREIGN KEY (User_ID) REFERENCES users_inf (USER_ID) -- Foreign Key to User
);


